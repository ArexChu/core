# serializer version: 1
# name: test_entities[sensor.mock_title_active_torrents-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.mock_title_active_torrents',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Active torrents',
    'platform': 'qbittorrent',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'active_torrents',
    'unique_id': '01K6E7464PTQKDE24VAJQZPTH2-active_torrents',
    'unit_of_measurement': 'torrents',
  })
# ---
# name: test_entities[sensor.mock_title_active_torrents-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Mock Title Active torrents',
      'unit_of_measurement': 'torrents',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.mock_title_active_torrents',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '1',
  })
# ---
# name: test_entities[sensor.mock_title_all_time_download-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.mock_title_all_time_download',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
      'sensor.private': dict({
        'suggested_unit_of_measurement': <UnitOfInformation.TEBIBYTES: 'TiB'>,
      }),
    }),
    'original_device_class': <SensorDeviceClass.DATA_SIZE: 'data_size'>,
    'original_icon': None,
    'original_name': 'All-time download',
    'platform': 'qbittorrent',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'alltime_download',
    'unique_id': '01K6E7464PTQKDE24VAJQZPTH2-alltime_download',
    'unit_of_measurement': <UnitOfInformation.TEBIBYTES: 'TiB'>,
  })
# ---
# name: test_entities[sensor.mock_title_all_time_download-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'data_size',
      'friendly_name': 'Mock Title All-time download',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfInformation.TEBIBYTES: 'TiB'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.mock_title_all_time_download',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0.783164386256431',
  })
# ---
# name: test_entities[sensor.mock_title_all_time_upload-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.mock_title_all_time_upload',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
      'sensor.private': dict({
        'suggested_unit_of_measurement': 'TiB',
      }),
    }),
    'original_device_class': <SensorDeviceClass.DATA_SIZE: 'data_size'>,
    'original_icon': None,
    'original_name': 'All-time upload',
    'platform': 'qbittorrent',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'alltime_upload',
    'unique_id': '01K6E7464PTQKDE24VAJQZPTH2-alltime_upload',
    'unit_of_measurement': 'TiB',
  })
# ---
# name: test_entities[sensor.mock_title_all_time_upload-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'data_size',
      'friendly_name': 'Mock Title All-time upload',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': 'TiB',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.mock_title_all_time_upload',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0.659164934858381',
  })
# ---
# name: test_entities[sensor.mock_title_all_torrents-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.mock_title_all_torrents',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'All torrents',
    'platform': 'qbittorrent',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'all_torrents',
    'unique_id': '01K6E7464PTQKDE24VAJQZPTH2-all_torrents',
    'unit_of_measurement': 'torrents',
  })
# ---
# name: test_entities[sensor.mock_title_all_torrents-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Mock Title All torrents',
      'unit_of_measurement': 'torrents',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.mock_title_all_torrents',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '6',
  })
# ---
# name: test_entities[sensor.mock_title_connection_status-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        'connected',
        'firewalled',
        'disconnected',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.mock_title_connection_status',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENUM: 'enum'>,
    'original_icon': None,
    'original_name': 'Connection status',
    'platform': 'qbittorrent',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'connection_status',
    'unique_id': '01K6E7464PTQKDE24VAJQZPTH2-connection_status',
    'unit_of_measurement': None,
  })
# ---
# name: test_entities[sensor.mock_title_connection_status-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'enum',
      'friendly_name': 'Mock Title Connection status',
      'options': list([
        'connected',
        'firewalled',
        'disconnected',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'sensor.mock_title_connection_status',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'connected',
  })
# ---
# name: test_entities[sensor.mock_title_download_speed-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.mock_title_download_speed',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
      'sensor.private': dict({
        'suggested_unit_of_measurement': <UnitOfDataRate.MEGABYTES_PER_SECOND: 'MB/s'>,
      }),
    }),
    'original_device_class': <SensorDeviceClass.DATA_RATE: 'data_rate'>,
    'original_icon': None,
    'original_name': 'Download speed',
    'platform': 'qbittorrent',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'download_speed',
    'unique_id': '01K6E7464PTQKDE24VAJQZPTH2-download_speed',
    'unit_of_measurement': <UnitOfDataRate.MEGABYTES_PER_SECOND: 'MB/s'>,
  })
# ---
# name: test_entities[sensor.mock_title_download_speed-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'data_rate',
      'friendly_name': 'Mock Title Download speed',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfDataRate.MEGABYTES_PER_SECOND: 'MB/s'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.mock_title_download_speed',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0.0',
  })
# ---
# name: test_entities[sensor.mock_title_download_speed_limit-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.mock_title_download_speed_limit',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
      'sensor.private': dict({
        'suggested_unit_of_measurement': <UnitOfDataRate.MEGABYTES_PER_SECOND: 'MB/s'>,
      }),
    }),
    'original_device_class': <SensorDeviceClass.DATA_RATE: 'data_rate'>,
    'original_icon': None,
    'original_name': 'Download speed limit',
    'platform': 'qbittorrent',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'download_speed_limit',
    'unique_id': '01K6E7464PTQKDE24VAJQZPTH2-download_speed_limit',
    'unit_of_measurement': <UnitOfDataRate.MEGABYTES_PER_SECOND: 'MB/s'>,
  })
# ---
# name: test_entities[sensor.mock_title_download_speed_limit-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'data_rate',
      'friendly_name': 'Mock Title Download speed limit',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfDataRate.MEGABYTES_PER_SECOND: 'MB/s'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.mock_title_download_speed_limit',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0.0',
  })
# ---
# name: test_entities[sensor.mock_title_errored_torrents-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.mock_title_errored_torrents',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Errored torrents',
    'platform': 'qbittorrent',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'errored_torrents',
    'unique_id': '01K6E7464PTQKDE24VAJQZPTH2-errored_torrents',
    'unit_of_measurement': 'torrents',
  })
# ---
# name: test_entities[sensor.mock_title_errored_torrents-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Mock Title Errored torrents',
      'unit_of_measurement': 'torrents',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.mock_title_errored_torrents',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '2',
  })
# ---
# name: test_entities[sensor.mock_title_global_ratio-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.mock_title_global_ratio',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Global ratio',
    'platform': 'qbittorrent',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'global_ratio',
    'unique_id': '01K6E7464PTQKDE24VAJQZPTH2-global_ratio',
    'unit_of_measurement': None,
  })
# ---
# name: test_entities[sensor.mock_title_global_ratio-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Mock Title Global ratio',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.mock_title_global_ratio',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0.84',
  })
# ---
# name: test_entities[sensor.mock_title_inactive_torrents-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.mock_title_inactive_torrents',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Inactive torrents',
    'platform': 'qbittorrent',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'inactive_torrents',
    'unique_id': '01K6E7464PTQKDE24VAJQZPTH2-inactive_torrents',
    'unit_of_measurement': 'torrents',
  })
# ---
# name: test_entities[sensor.mock_title_inactive_torrents-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Mock Title Inactive torrents',
      'unit_of_measurement': 'torrents',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.mock_title_inactive_torrents',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '2',
  })
# ---
# name: test_entities[sensor.mock_title_paused_torrents-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.mock_title_paused_torrents',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Paused torrents',
    'platform': 'qbittorrent',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'paused_torrents',
    'unique_id': '01K6E7464PTQKDE24VAJQZPTH2-paused_torrents',
    'unit_of_measurement': 'torrents',
  })
# ---
# name: test_entities[sensor.mock_title_paused_torrents-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Mock Title Paused torrents',
      'unit_of_measurement': 'torrents',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.mock_title_paused_torrents',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '1',
  })
# ---
# name: test_entities[sensor.mock_title_status-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        'idle',
        'up_down',
        'seeding',
        'downloading',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.mock_title_status',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.ENUM: 'enum'>,
    'original_icon': None,
    'original_name': 'Status',
    'platform': 'qbittorrent',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'current_status',
    'unique_id': '01K6E7464PTQKDE24VAJQZPTH2-current_status',
    'unit_of_measurement': None,
  })
# ---
# name: test_entities[sensor.mock_title_status-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'enum',
      'friendly_name': 'Mock Title Status',
      'options': list([
        'idle',
        'up_down',
        'seeding',
        'downloading',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'sensor.mock_title_status',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'idle',
  })
# ---
# name: test_entities[sensor.mock_title_upload_speed-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.mock_title_upload_speed',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
      'sensor.private': dict({
        'suggested_unit_of_measurement': <UnitOfDataRate.MEGABYTES_PER_SECOND: 'MB/s'>,
      }),
    }),
    'original_device_class': <SensorDeviceClass.DATA_RATE: 'data_rate'>,
    'original_icon': None,
    'original_name': 'Upload speed',
    'platform': 'qbittorrent',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'upload_speed',
    'unique_id': '01K6E7464PTQKDE24VAJQZPTH2-upload_speed',
    'unit_of_measurement': <UnitOfDataRate.MEGABYTES_PER_SECOND: 'MB/s'>,
  })
# ---
# name: test_entities[sensor.mock_title_upload_speed-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'data_rate',
      'friendly_name': 'Mock Title Upload speed',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfDataRate.MEGABYTES_PER_SECOND: 'MB/s'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.mock_title_upload_speed',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0.0',
  })
# ---
# name: test_entities[sensor.mock_title_upload_speed_limit-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.mock_title_upload_speed_limit',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
      'sensor.private': dict({
        'suggested_unit_of_measurement': <UnitOfDataRate.MEGABYTES_PER_SECOND: 'MB/s'>,
      }),
    }),
    'original_device_class': <SensorDeviceClass.DATA_RATE: 'data_rate'>,
    'original_icon': None,
    'original_name': 'Upload speed limit',
    'platform': 'qbittorrent',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'upload_speed_limit',
    'unique_id': '01K6E7464PTQKDE24VAJQZPTH2-upload_speed_limit',
    'unit_of_measurement': <UnitOfDataRate.MEGABYTES_PER_SECOND: 'MB/s'>,
  })
# ---
# name: test_entities[sensor.mock_title_upload_speed_limit-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'data_rate',
      'friendly_name': 'Mock Title Upload speed limit',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfDataRate.MEGABYTES_PER_SECOND: 'MB/s'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.mock_title_upload_speed_limit',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0.0',
  })
# ---
