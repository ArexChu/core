# serializer version: 1
# name: test_sensor_states[air_pollution][sensor.openweathermap_air_quality_index-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.openweathermap_air_quality_index',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.AQI: 'aqi'>,
    'original_icon': None,
    'original_name': 'Air quality index',
    'platform': 'openweathermap',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '12.34-56.78-aqi',
    'unit_of_measurement': None,
  })
# ---
# name: test_sensor_states[air_pollution][sensor.openweathermap_air_quality_index-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'attribution': 'Data provided by OpenWeatherMap',
      'device_class': 'aqi',
      'friendly_name': 'OpenWeatherMap Air quality index',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.openweathermap_air_quality_index',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '3',
  })
# ---
# name: test_sensor_states[air_pollution][sensor.openweathermap_carbon_monoxide-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.openweathermap_carbon_monoxide',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.CO: 'carbon_monoxide'>,
    'original_icon': None,
    'original_name': 'Carbon monoxide',
    'platform': 'openweathermap',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '12.34-56.78-co',
    'unit_of_measurement': 'μg/m³',
  })
# ---
# name: test_sensor_states[air_pollution][sensor.openweathermap_carbon_monoxide-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'attribution': 'Data provided by OpenWeatherMap',
      'device_class': 'carbon_monoxide',
      'friendly_name': 'OpenWeatherMap Carbon monoxide',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': 'μg/m³',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.openweathermap_carbon_monoxide',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '125.55',
  })
# ---
# name: test_sensor_states[air_pollution][sensor.openweathermap_nitrogen_dioxide-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.openweathermap_nitrogen_dioxide',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.NITROGEN_DIOXIDE: 'nitrogen_dioxide'>,
    'original_icon': None,
    'original_name': 'Nitrogen dioxide',
    'platform': 'openweathermap',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '12.34-56.78-no2',
    'unit_of_measurement': 'μg/m³',
  })
# ---
# name: test_sensor_states[air_pollution][sensor.openweathermap_nitrogen_dioxide-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'attribution': 'Data provided by OpenWeatherMap',
      'device_class': 'nitrogen_dioxide',
      'friendly_name': 'OpenWeatherMap Nitrogen dioxide',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': 'μg/m³',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.openweathermap_nitrogen_dioxide',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0.78',
  })
# ---
# name: test_sensor_states[air_pollution][sensor.openweathermap_nitrogen_monoxide-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.openweathermap_nitrogen_monoxide',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.NITROGEN_MONOXIDE: 'nitrogen_monoxide'>,
    'original_icon': None,
    'original_name': 'Nitrogen monoxide',
    'platform': 'openweathermap',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '12.34-56.78-no',
    'unit_of_measurement': 'μg/m³',
  })
# ---
# name: test_sensor_states[air_pollution][sensor.openweathermap_nitrogen_monoxide-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'attribution': 'Data provided by OpenWeatherMap',
      'device_class': 'nitrogen_monoxide',
      'friendly_name': 'OpenWeatherMap Nitrogen monoxide',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': 'μg/m³',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.openweathermap_nitrogen_monoxide',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0.11',
  })
# ---
# name: test_sensor_states[air_pollution][sensor.openweathermap_ozone-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.openweathermap_ozone',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.OZONE: 'ozone'>,
    'original_icon': None,
    'original_name': 'Ozone',
    'platform': 'openweathermap',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '12.34-56.78-o3',
    'unit_of_measurement': 'μg/m³',
  })
# ---
# name: test_sensor_states[air_pollution][sensor.openweathermap_ozone-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'attribution': 'Data provided by OpenWeatherMap',
      'device_class': 'ozone',
      'friendly_name': 'OpenWeatherMap Ozone',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': 'μg/m³',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.openweathermap_ozone',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '101.98',
  })
# ---
# name: test_sensor_states[air_pollution][sensor.openweathermap_pm10-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.openweathermap_pm10',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.PM10: 'pm10'>,
    'original_icon': None,
    'original_name': 'PM10',
    'platform': 'openweathermap',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '12.34-56.78-pm10',
    'unit_of_measurement': 'μg/m³',
  })
# ---
# name: test_sensor_states[air_pollution][sensor.openweathermap_pm10-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'attribution': 'Data provided by OpenWeatherMap',
      'device_class': 'pm10',
      'friendly_name': 'OpenWeatherMap PM10',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': 'μg/m³',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.openweathermap_pm10',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '4.77',
  })
# ---
# name: test_sensor_states[air_pollution][sensor.openweathermap_pm2_5-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.openweathermap_pm2_5',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.PM25: 'pm25'>,
    'original_icon': None,
    'original_name': 'PM2.5',
    'platform': 'openweathermap',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '12.34-56.78-pm2_5',
    'unit_of_measurement': 'μg/m³',
  })
# ---
# name: test_sensor_states[air_pollution][sensor.openweathermap_pm2_5-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'attribution': 'Data provided by OpenWeatherMap',
      'device_class': 'pm25',
      'friendly_name': 'OpenWeatherMap PM2.5',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': 'μg/m³',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.openweathermap_pm2_5',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '4.48',
  })
# ---
# name: test_sensor_states[air_pollution][sensor.openweathermap_sulphur_dioxide-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.openweathermap_sulphur_dioxide',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.SULPHUR_DIOXIDE: 'sulphur_dioxide'>,
    'original_icon': None,
    'original_name': 'Sulphur dioxide',
    'platform': 'openweathermap',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '12.34-56.78-so2',
    'unit_of_measurement': 'μg/m³',
  })
# ---
# name: test_sensor_states[air_pollution][sensor.openweathermap_sulphur_dioxide-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'attribution': 'Data provided by OpenWeatherMap',
      'device_class': 'sulphur_dioxide',
      'friendly_name': 'OpenWeatherMap Sulphur dioxide',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': 'μg/m³',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.openweathermap_sulphur_dioxide',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0.59',
  })
# ---
# name: test_sensor_states[current][sensor.openweathermap_apparent_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.openweathermap_apparent_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 1,
      }),
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': None,
    'original_name': 'Apparent temperature',
    'platform': 'openweathermap',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'feels_like_temperature',
    'unique_id': '12.34-56.78-feels_like_temperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_sensor_states[current][sensor.openweathermap_apparent_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'attribution': 'Data provided by OpenWeatherMap',
      'device_class': 'temperature',
      'friendly_name': 'OpenWeatherMap Apparent temperature',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.openweathermap_apparent_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '2.07',
  })
# ---
# name: test_sensor_states[current][sensor.openweathermap_cloud_coverage-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.openweathermap_cloud_coverage',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Cloud coverage',
    'platform': 'openweathermap',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'clouds',
    'unique_id': '12.34-56.78-clouds',
    'unit_of_measurement': '%',
  })
# ---
# name: test_sensor_states[current][sensor.openweathermap_cloud_coverage-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'attribution': 'Data provided by OpenWeatherMap',
      'friendly_name': 'OpenWeatherMap Cloud coverage',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': '%',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.openweathermap_cloud_coverage',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '75',
  })
# ---
# name: test_sensor_states[current][sensor.openweathermap_condition-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.openweathermap_condition',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Condition',
    'platform': 'openweathermap',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'condition',
    'unique_id': '12.34-56.78-condition',
    'unit_of_measurement': None,
  })
# ---
# name: test_sensor_states[current][sensor.openweathermap_condition-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'attribution': 'Data provided by OpenWeatherMap',
      'friendly_name': 'OpenWeatherMap Condition',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.openweathermap_condition',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'cloudy',
  })
# ---
# name: test_sensor_states[current][sensor.openweathermap_dew_point_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.openweathermap_dew_point_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 1,
      }),
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': None,
    'original_name': 'Dew point temperature',
    'platform': 'openweathermap',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'dew_point',
    'unique_id': '12.34-56.78-dew_point',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_sensor_states[current][sensor.openweathermap_dew_point_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'attribution': 'Data provided by OpenWeatherMap',
      'device_class': 'temperature',
      'friendly_name': 'OpenWeatherMap Dew point temperature',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.openweathermap_dew_point_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '3.99',
  })
# ---
# name: test_sensor_states[current][sensor.openweathermap_humidity-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.openweathermap_humidity',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.HUMIDITY: 'humidity'>,
    'original_icon': None,
    'original_name': 'Humidity',
    'platform': 'openweathermap',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '12.34-56.78-humidity',
    'unit_of_measurement': '%',
  })
# ---
# name: test_sensor_states[current][sensor.openweathermap_humidity-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'attribution': 'Data provided by OpenWeatherMap',
      'device_class': 'humidity',
      'friendly_name': 'OpenWeatherMap Humidity',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': '%',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.openweathermap_humidity',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '82',
  })
# ---
# name: test_sensor_states[current][sensor.openweathermap_precipitation_kind-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.openweathermap_precipitation_kind',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Precipitation kind',
    'platform': 'openweathermap',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'precipitation_kind',
    'unique_id': '12.34-56.78-precipitation_kind',
    'unit_of_measurement': None,
  })
# ---
# name: test_sensor_states[current][sensor.openweathermap_precipitation_kind-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'attribution': 'Data provided by OpenWeatherMap',
      'friendly_name': 'OpenWeatherMap Precipitation kind',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.openweathermap_precipitation_kind',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'Rain',
  })
# ---
# name: test_sensor_states[current][sensor.openweathermap_pressure-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.openweathermap_pressure',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 0,
      }),
    }),
    'original_device_class': <SensorDeviceClass.PRESSURE: 'pressure'>,
    'original_icon': None,
    'original_name': 'Pressure',
    'platform': 'openweathermap',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '12.34-56.78-pressure',
    'unit_of_measurement': <UnitOfPressure.HPA: 'hPa'>,
  })
# ---
# name: test_sensor_states[current][sensor.openweathermap_pressure-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'attribution': 'Data provided by OpenWeatherMap',
      'device_class': 'pressure',
      'friendly_name': 'OpenWeatherMap Pressure',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfPressure.HPA: 'hPa'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.openweathermap_pressure',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '1000',
  })
# ---
# name: test_sensor_states[current][sensor.openweathermap_rain_intensity-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.openweathermap_rain_intensity',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 0,
      }),
    }),
    'original_device_class': <SensorDeviceClass.PRECIPITATION_INTENSITY: 'precipitation_intensity'>,
    'original_icon': None,
    'original_name': 'Rain intensity',
    'platform': 'openweathermap',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'rain',
    'unique_id': '12.34-56.78-rain',
    'unit_of_measurement': <UnitOfVolumetricFlux.MILLIMETERS_PER_HOUR: 'mm/h'>,
  })
# ---
# name: test_sensor_states[current][sensor.openweathermap_rain_intensity-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'attribution': 'Data provided by OpenWeatherMap',
      'device_class': 'precipitation_intensity',
      'friendly_name': 'OpenWeatherMap Rain intensity',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfVolumetricFlux.MILLIMETERS_PER_HOUR: 'mm/h'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.openweathermap_rain_intensity',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '1.21',
  })
# ---
# name: test_sensor_states[current][sensor.openweathermap_snow_intensity-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.openweathermap_snow_intensity',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 0,
      }),
    }),
    'original_device_class': <SensorDeviceClass.PRECIPITATION_INTENSITY: 'precipitation_intensity'>,
    'original_icon': None,
    'original_name': 'Snow intensity',
    'platform': 'openweathermap',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'snow',
    'unique_id': '12.34-56.78-snow',
    'unit_of_measurement': <UnitOfVolumetricFlux.MILLIMETERS_PER_HOUR: 'mm/h'>,
  })
# ---
# name: test_sensor_states[current][sensor.openweathermap_snow_intensity-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'attribution': 'Data provided by OpenWeatherMap',
      'device_class': 'precipitation_intensity',
      'friendly_name': 'OpenWeatherMap Snow intensity',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfVolumetricFlux.MILLIMETERS_PER_HOUR: 'mm/h'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.openweathermap_snow_intensity',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_sensor_states[current][sensor.openweathermap_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.openweathermap_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 1,
      }),
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': None,
    'original_name': 'Temperature',
    'platform': 'openweathermap',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '12.34-56.78-temperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_sensor_states[current][sensor.openweathermap_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'attribution': 'Data provided by OpenWeatherMap',
      'device_class': 'temperature',
      'friendly_name': 'OpenWeatherMap Temperature',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.openweathermap_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '6.84',
  })
# ---
# name: test_sensor_states[current][sensor.openweathermap_uv_index-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.openweathermap_uv_index',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'UV index',
    'platform': 'openweathermap',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'uv_index',
    'unique_id': '12.34-56.78-uv_index',
    'unit_of_measurement': 'UV index',
  })
# ---
# name: test_sensor_states[current][sensor.openweathermap_uv_index-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'attribution': 'Data provided by OpenWeatherMap',
      'friendly_name': 'OpenWeatherMap UV index',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': 'UV index',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.openweathermap_uv_index',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0.13',
  })
# ---
# name: test_sensor_states[current][sensor.openweathermap_visibility-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.openweathermap_visibility',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 0,
      }),
    }),
    'original_device_class': <SensorDeviceClass.DISTANCE: 'distance'>,
    'original_icon': None,
    'original_name': 'Visibility',
    'platform': 'openweathermap',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'visibility_distance',
    'unique_id': '12.34-56.78-visibility_distance',
    'unit_of_measurement': <UnitOfLength.METERS: 'm'>,
  })
# ---
# name: test_sensor_states[current][sensor.openweathermap_visibility-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'attribution': 'Data provided by OpenWeatherMap',
      'device_class': 'distance',
      'friendly_name': 'OpenWeatherMap Visibility',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfLength.METERS: 'm'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.openweathermap_visibility',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '10000',
  })
# ---
# name: test_sensor_states[current][sensor.openweathermap_weather-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.openweathermap_weather',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Weather',
    'platform': 'openweathermap',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'weather',
    'unique_id': '12.34-56.78-weather',
    'unit_of_measurement': None,
  })
# ---
# name: test_sensor_states[current][sensor.openweathermap_weather-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'attribution': 'Data provided by OpenWeatherMap',
      'friendly_name': 'OpenWeatherMap Weather',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.openweathermap_weather',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'broken clouds',
  })
# ---
# name: test_sensor_states[current][sensor.openweathermap_weather_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.openweathermap_weather_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Weather code',
    'platform': 'openweathermap',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'weather_code',
    'unique_id': '12.34-56.78-weather_code',
    'unit_of_measurement': None,
  })
# ---
# name: test_sensor_states[current][sensor.openweathermap_weather_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'attribution': 'Data provided by OpenWeatherMap',
      'friendly_name': 'OpenWeatherMap Weather code',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.openweathermap_weather_code',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '803',
  })
# ---
# name: test_sensor_states[current][sensor.openweathermap_wind_direction-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT_ANGLE: 'measurement_angle'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.openweathermap_wind_direction',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.WIND_DIRECTION: 'wind_direction'>,
    'original_icon': None,
    'original_name': 'Wind direction',
    'platform': 'openweathermap',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '12.34-56.78-wind_bearing',
    'unit_of_measurement': '°',
  })
# ---
# name: test_sensor_states[current][sensor.openweathermap_wind_direction-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'attribution': 'Data provided by OpenWeatherMap',
      'device_class': 'wind_direction',
      'friendly_name': 'OpenWeatherMap Wind direction',
      'state_class': <SensorStateClass.MEASUREMENT_ANGLE: 'measurement_angle'>,
      'unit_of_measurement': '°',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.openweathermap_wind_direction',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '199',
  })
# ---
# name: test_sensor_states[current][sensor.openweathermap_wind_gust_speed-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.openweathermap_wind_gust_speed',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
      'sensor.private': dict({
        'suggested_unit_of_measurement': <UnitOfSpeed.KILOMETERS_PER_HOUR: 'km/h'>,
      }),
    }),
    'original_device_class': <SensorDeviceClass.WIND_SPEED: 'wind_speed'>,
    'original_icon': None,
    'original_name': 'Wind gust speed',
    'platform': 'openweathermap',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'wind_gust',
    'unique_id': '12.34-56.78-wind_gust',
    'unit_of_measurement': <UnitOfSpeed.KILOMETERS_PER_HOUR: 'km/h'>,
  })
# ---
# name: test_sensor_states[current][sensor.openweathermap_wind_gust_speed-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'attribution': 'Data provided by OpenWeatherMap',
      'device_class': 'wind_speed',
      'friendly_name': 'OpenWeatherMap Wind gust speed',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfSpeed.KILOMETERS_PER_HOUR: 'km/h'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.openweathermap_wind_gust_speed',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '42.516',
  })
# ---
# name: test_sensor_states[current][sensor.openweathermap_wind_speed-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.openweathermap_wind_speed',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
      'sensor.private': dict({
        'suggested_unit_of_measurement': <UnitOfSpeed.KILOMETERS_PER_HOUR: 'km/h'>,
      }),
    }),
    'original_device_class': <SensorDeviceClass.WIND_SPEED: 'wind_speed'>,
    'original_icon': None,
    'original_name': 'Wind speed',
    'platform': 'openweathermap',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '12.34-56.78-wind_speed',
    'unit_of_measurement': <UnitOfSpeed.KILOMETERS_PER_HOUR: 'km/h'>,
  })
# ---
# name: test_sensor_states[current][sensor.openweathermap_wind_speed-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'attribution': 'Data provided by OpenWeatherMap',
      'device_class': 'wind_speed',
      'friendly_name': 'OpenWeatherMap Wind speed',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfSpeed.KILOMETERS_PER_HOUR: 'km/h'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.openweathermap_wind_speed',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '35.388',
  })
# ---
# name: test_sensor_states[v3.0][sensor.openweathermap_apparent_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.openweathermap_apparent_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 1,
      }),
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': None,
    'original_name': 'Apparent temperature',
    'platform': 'openweathermap',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'feels_like_temperature',
    'unique_id': '12.34-56.78-feels_like_temperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_sensor_states[v3.0][sensor.openweathermap_apparent_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'attribution': 'Data provided by OpenWeatherMap',
      'device_class': 'temperature',
      'friendly_name': 'OpenWeatherMap Apparent temperature',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.openweathermap_apparent_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '2.07',
  })
# ---
# name: test_sensor_states[v3.0][sensor.openweathermap_cloud_coverage-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.openweathermap_cloud_coverage',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Cloud coverage',
    'platform': 'openweathermap',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'clouds',
    'unique_id': '12.34-56.78-clouds',
    'unit_of_measurement': '%',
  })
# ---
# name: test_sensor_states[v3.0][sensor.openweathermap_cloud_coverage-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'attribution': 'Data provided by OpenWeatherMap',
      'friendly_name': 'OpenWeatherMap Cloud coverage',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': '%',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.openweathermap_cloud_coverage',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '75',
  })
# ---
# name: test_sensor_states[v3.0][sensor.openweathermap_condition-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.openweathermap_condition',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Condition',
    'platform': 'openweathermap',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'condition',
    'unique_id': '12.34-56.78-condition',
    'unit_of_measurement': None,
  })
# ---
# name: test_sensor_states[v3.0][sensor.openweathermap_condition-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'attribution': 'Data provided by OpenWeatherMap',
      'friendly_name': 'OpenWeatherMap Condition',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.openweathermap_condition',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'cloudy',
  })
# ---
# name: test_sensor_states[v3.0][sensor.openweathermap_dew_point_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.openweathermap_dew_point_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 1,
      }),
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': None,
    'original_name': 'Dew point temperature',
    'platform': 'openweathermap',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'dew_point',
    'unique_id': '12.34-56.78-dew_point',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_sensor_states[v3.0][sensor.openweathermap_dew_point_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'attribution': 'Data provided by OpenWeatherMap',
      'device_class': 'temperature',
      'friendly_name': 'OpenWeatherMap Dew point temperature',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.openweathermap_dew_point_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '3.99',
  })
# ---
# name: test_sensor_states[v3.0][sensor.openweathermap_humidity-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.openweathermap_humidity',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.HUMIDITY: 'humidity'>,
    'original_icon': None,
    'original_name': 'Humidity',
    'platform': 'openweathermap',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '12.34-56.78-humidity',
    'unit_of_measurement': '%',
  })
# ---
# name: test_sensor_states[v3.0][sensor.openweathermap_humidity-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'attribution': 'Data provided by OpenWeatherMap',
      'device_class': 'humidity',
      'friendly_name': 'OpenWeatherMap Humidity',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': '%',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.openweathermap_humidity',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '82',
  })
# ---
# name: test_sensor_states[v3.0][sensor.openweathermap_precipitation_kind-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.openweathermap_precipitation_kind',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Precipitation kind',
    'platform': 'openweathermap',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'precipitation_kind',
    'unique_id': '12.34-56.78-precipitation_kind',
    'unit_of_measurement': None,
  })
# ---
# name: test_sensor_states[v3.0][sensor.openweathermap_precipitation_kind-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'attribution': 'Data provided by OpenWeatherMap',
      'friendly_name': 'OpenWeatherMap Precipitation kind',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.openweathermap_precipitation_kind',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'Rain',
  })
# ---
# name: test_sensor_states[v3.0][sensor.openweathermap_pressure-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.openweathermap_pressure',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 0,
      }),
    }),
    'original_device_class': <SensorDeviceClass.PRESSURE: 'pressure'>,
    'original_icon': None,
    'original_name': 'Pressure',
    'platform': 'openweathermap',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '12.34-56.78-pressure',
    'unit_of_measurement': <UnitOfPressure.HPA: 'hPa'>,
  })
# ---
# name: test_sensor_states[v3.0][sensor.openweathermap_pressure-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'attribution': 'Data provided by OpenWeatherMap',
      'device_class': 'pressure',
      'friendly_name': 'OpenWeatherMap Pressure',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfPressure.HPA: 'hPa'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.openweathermap_pressure',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '1000',
  })
# ---
# name: test_sensor_states[v3.0][sensor.openweathermap_rain_intensity-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.openweathermap_rain_intensity',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 0,
      }),
    }),
    'original_device_class': <SensorDeviceClass.PRECIPITATION_INTENSITY: 'precipitation_intensity'>,
    'original_icon': None,
    'original_name': 'Rain intensity',
    'platform': 'openweathermap',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'rain',
    'unique_id': '12.34-56.78-rain',
    'unit_of_measurement': <UnitOfVolumetricFlux.MILLIMETERS_PER_HOUR: 'mm/h'>,
  })
# ---
# name: test_sensor_states[v3.0][sensor.openweathermap_rain_intensity-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'attribution': 'Data provided by OpenWeatherMap',
      'device_class': 'precipitation_intensity',
      'friendly_name': 'OpenWeatherMap Rain intensity',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfVolumetricFlux.MILLIMETERS_PER_HOUR: 'mm/h'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.openweathermap_rain_intensity',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '1.21',
  })
# ---
# name: test_sensor_states[v3.0][sensor.openweathermap_snow_intensity-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.openweathermap_snow_intensity',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 0,
      }),
    }),
    'original_device_class': <SensorDeviceClass.PRECIPITATION_INTENSITY: 'precipitation_intensity'>,
    'original_icon': None,
    'original_name': 'Snow intensity',
    'platform': 'openweathermap',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'snow',
    'unique_id': '12.34-56.78-snow',
    'unit_of_measurement': <UnitOfVolumetricFlux.MILLIMETERS_PER_HOUR: 'mm/h'>,
  })
# ---
# name: test_sensor_states[v3.0][sensor.openweathermap_snow_intensity-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'attribution': 'Data provided by OpenWeatherMap',
      'device_class': 'precipitation_intensity',
      'friendly_name': 'OpenWeatherMap Snow intensity',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfVolumetricFlux.MILLIMETERS_PER_HOUR: 'mm/h'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.openweathermap_snow_intensity',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_sensor_states[v3.0][sensor.openweathermap_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.openweathermap_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 1,
      }),
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': None,
    'original_name': 'Temperature',
    'platform': 'openweathermap',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '12.34-56.78-temperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_sensor_states[v3.0][sensor.openweathermap_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'attribution': 'Data provided by OpenWeatherMap',
      'device_class': 'temperature',
      'friendly_name': 'OpenWeatherMap Temperature',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.openweathermap_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '6.84',
  })
# ---
# name: test_sensor_states[v3.0][sensor.openweathermap_uv_index-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.openweathermap_uv_index',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'UV index',
    'platform': 'openweathermap',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'uv_index',
    'unique_id': '12.34-56.78-uv_index',
    'unit_of_measurement': 'UV index',
  })
# ---
# name: test_sensor_states[v3.0][sensor.openweathermap_uv_index-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'attribution': 'Data provided by OpenWeatherMap',
      'friendly_name': 'OpenWeatherMap UV index',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': 'UV index',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.openweathermap_uv_index',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0.13',
  })
# ---
# name: test_sensor_states[v3.0][sensor.openweathermap_visibility-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.openweathermap_visibility',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 0,
      }),
    }),
    'original_device_class': <SensorDeviceClass.DISTANCE: 'distance'>,
    'original_icon': None,
    'original_name': 'Visibility',
    'platform': 'openweathermap',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'visibility_distance',
    'unique_id': '12.34-56.78-visibility_distance',
    'unit_of_measurement': <UnitOfLength.METERS: 'm'>,
  })
# ---
# name: test_sensor_states[v3.0][sensor.openweathermap_visibility-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'attribution': 'Data provided by OpenWeatherMap',
      'device_class': 'distance',
      'friendly_name': 'OpenWeatherMap Visibility',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfLength.METERS: 'm'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.openweathermap_visibility',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '10000',
  })
# ---
# name: test_sensor_states[v3.0][sensor.openweathermap_weather-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.openweathermap_weather',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Weather',
    'platform': 'openweathermap',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'weather',
    'unique_id': '12.34-56.78-weather',
    'unit_of_measurement': None,
  })
# ---
# name: test_sensor_states[v3.0][sensor.openweathermap_weather-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'attribution': 'Data provided by OpenWeatherMap',
      'friendly_name': 'OpenWeatherMap Weather',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.openweathermap_weather',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'broken clouds',
  })
# ---
# name: test_sensor_states[v3.0][sensor.openweathermap_weather_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.openweathermap_weather_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Weather code',
    'platform': 'openweathermap',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'weather_code',
    'unique_id': '12.34-56.78-weather_code',
    'unit_of_measurement': None,
  })
# ---
# name: test_sensor_states[v3.0][sensor.openweathermap_weather_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'attribution': 'Data provided by OpenWeatherMap',
      'friendly_name': 'OpenWeatherMap Weather code',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.openweathermap_weather_code',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '803',
  })
# ---
# name: test_sensor_states[v3.0][sensor.openweathermap_wind_direction-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT_ANGLE: 'measurement_angle'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.openweathermap_wind_direction',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.WIND_DIRECTION: 'wind_direction'>,
    'original_icon': None,
    'original_name': 'Wind direction',
    'platform': 'openweathermap',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '12.34-56.78-wind_bearing',
    'unit_of_measurement': '°',
  })
# ---
# name: test_sensor_states[v3.0][sensor.openweathermap_wind_direction-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'attribution': 'Data provided by OpenWeatherMap',
      'device_class': 'wind_direction',
      'friendly_name': 'OpenWeatherMap Wind direction',
      'state_class': <SensorStateClass.MEASUREMENT_ANGLE: 'measurement_angle'>,
      'unit_of_measurement': '°',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.openweathermap_wind_direction',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '199',
  })
# ---
# name: test_sensor_states[v3.0][sensor.openweathermap_wind_gust_speed-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.openweathermap_wind_gust_speed',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
      'sensor.private': dict({
        'suggested_unit_of_measurement': <UnitOfSpeed.KILOMETERS_PER_HOUR: 'km/h'>,
      }),
    }),
    'original_device_class': <SensorDeviceClass.WIND_SPEED: 'wind_speed'>,
    'original_icon': None,
    'original_name': 'Wind gust speed',
    'platform': 'openweathermap',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'wind_gust',
    'unique_id': '12.34-56.78-wind_gust',
    'unit_of_measurement': <UnitOfSpeed.KILOMETERS_PER_HOUR: 'km/h'>,
  })
# ---
# name: test_sensor_states[v3.0][sensor.openweathermap_wind_gust_speed-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'attribution': 'Data provided by OpenWeatherMap',
      'device_class': 'wind_speed',
      'friendly_name': 'OpenWeatherMap Wind gust speed',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfSpeed.KILOMETERS_PER_HOUR: 'km/h'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.openweathermap_wind_gust_speed',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '42.516',
  })
# ---
# name: test_sensor_states[v3.0][sensor.openweathermap_wind_speed-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.openweathermap_wind_speed',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
      'sensor.private': dict({
        'suggested_unit_of_measurement': <UnitOfSpeed.KILOMETERS_PER_HOUR: 'km/h'>,
      }),
    }),
    'original_device_class': <SensorDeviceClass.WIND_SPEED: 'wind_speed'>,
    'original_icon': None,
    'original_name': 'Wind speed',
    'platform': 'openweathermap',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '12.34-56.78-wind_speed',
    'unit_of_measurement': <UnitOfSpeed.KILOMETERS_PER_HOUR: 'km/h'>,
  })
# ---
# name: test_sensor_states[v3.0][sensor.openweathermap_wind_speed-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'attribution': 'Data provided by OpenWeatherMap',
      'device_class': 'wind_speed',
      'friendly_name': 'OpenWeatherMap Wind speed',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfSpeed.KILOMETERS_PER_HOUR: 'km/h'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.openweathermap_wind_speed',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '35.388',
  })
# ---
