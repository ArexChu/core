name: Build Release

on:
  push:
    branches: [ master ]

jobs:
  build-arm64:
    runs-on: ubuntu-22.04-arm
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Python 3.13 from custom .deb
        run: |
          sudo apt-get update
          wget https://github.com/ArexChu/cpython/releases/download/v3.13.7-6/python3.13_3.13.7-1_arm64.deb
          sudo apt install -y ./python3.13_3.13.7-1_arm64.deb
          sudo apt-get install -y libturbojpeg
          python3.13 --version
          python3.13 -m ensurepip
          python3.13 -m pip install --upgrade pip wheel build setuptools

      - name: Patch pkgutil for old setup.py compatibility
        run: |
          echo -e "\n# Compatibility shim for removed ImpImporter\nclass ImpImporter: pass" | sudo tee -a $(python3.13 -c "import pkgutil; print(pkgutil.__file__)")

      - name: Install dependencies from source
        run: |
          python3.13 -m pip install -c homeassistant/package_constraints.txt -r requirements.txt
          python3.13 -m pip install pyotp==2.9.0 PyQRCode==1.2.1 home-assistant-frontend==20251001.0 PyTurboJPEG==1.8.0 pymicro-vad==1.0.1 pyspeex-noise==1.0.2 python-matter-server==8.1.0 home-assistant-intents==2025.10.1 PyNaCl==1.6.0 mutagen==1.47.0 hassil==3.2.0 ha-ffmpeg==3.2.2 aiousbwatcher==1.1.1 pyserial==3.5 aioruuvigateway==0.1.0 aioshelly==13.10.0 aiodhcpwatcher==1.2.1 aiodiscover==2.7.1 cached-ipaddress==0.10.0 aioesphomeapi==41.11.0 esphome-dashboard-api==1.3.0 bleak-esphome==3.3.0
          python3.13 -m pip install mysqlclient bleak
          python3.13 -m pip install .
          python3.13 -m pip install pyinstaller

      - name: Prepare entrypoint
        run: |
          cat > run_homeassistant.py << 'EOF'
          import os
          import sys
          if getattr(sys, "frozen", False):
              sys.executable = "/usr/local/bin/python3.13"
          from homeassistant.__main__ import main
          if __name__ == "__main__":
              main()
          EOF

      - name: Build homeassistant executable (auto include all deps)
        run: |
          python3.13 - <<'PYCODE' > collect_args.txt
          import importlib.metadata

          collects = []
          for dist in importlib.metadata.distributions():
              name = dist.metadata['Name']
              top_level = None
              try:
                  top_level = dist.read_text('top_level.txt')
              except FileNotFoundError:
                  pass
              if top_level:
                  for module in top_level.splitlines():
                      if module.strip():
                          collects.append(f"--collect-all {module.strip()}")
              else:
                  collects.append(f"--collect-all {name.replace('-', '_')}")

          print(' '.join(sorted(set(collects))))
          PYCODE

          ALL_COLLECTS=$(cat collect_args.txt)
          SITE_PACKAGES=$(python3.13 -c "import site; print(site.getsitepackages()[0])")
          EXTRA_DATA=$(find $SITE_PACKAGES -maxdepth 1 -type f \( -name "*.so" -o -name "*.py" \) -printf "--add-data '%p:.' ")

          pyinstaller --onefile \
            --name homeassistant \
            --collect-all homeassistant \
            --exclude-module pytest \
            --exclude-module unittest \
            --exclude-module test \
            --exclude-module tests \
            --exclude-module mypy \
            --exclude-module black \
            --exclude-module pylint \
            --exclude-module setuptools \
            --exclude-module wheel \
            --exclude-module pip \
            $ALL_COLLECTS \
            $EXTRA_DATA \
            run_homeassistant.py

          ls -lh dist/

      - name: Test binary
        run: |
          ./dist/homeassistant --version

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: homeassistant
          path: dist/homeassistant

      - name: Upload binary to Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: "v2025.10.1-${{ github.run_number }}"
          files: dist/homeassistant
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
