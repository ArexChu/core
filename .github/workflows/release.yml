name: Build Release

on:
  push:
    branches: [ master ]

jobs:
  build-arm64:
    runs-on: ubuntu-22.04-arm
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Python 3.13 from custom .deb
        run: |
          sudo apt-get update
          wget https://github.com/ArexChu/cpython/releases/download/v3.13.7-6/python3.13_3.13.7-1_arm64.deb
          sudo apt install -y ./python3.13_3.13.7-1_arm64.deb
          sudo apt-get install -y libturbojpeg
          python3.13 --version
          python3.13 -m ensurepip
          python3.13 -m pip install --upgrade pip wheel build setuptools

      - name: Patch pkgutil for old setup.py compatibility
        run: |
          echo -e "\n# Compatibility shim for removed ImpImporter\nclass ImpImporter: pass" | sudo tee -a $(python3.13 -c "import pkgutil; print(pkgutil.__file__)")

      - name: Get pip cache dir
        id: pip-cache
        run: |
          echo "dir=$(python3.13 -m pip cache dir)" >> $GITHUB_OUTPUT

      - name: Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.pip-cache.outputs.dir }}
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies from source
        run: |
          python3.13 -m pip install -c homeassistant/package_constraints.txt -r requirements.txt
          python3.13 -m pip install -r requirements_all.txt
          python3.13 -m pip install mysqlclient
          python3.13 -m pip install .
          python3.13 -m pip install pyinstaller

      - name: Prepare entrypoint
        run: |
          cat > run_homeassistant.py << 'EOF'
          import os
          import sys
          if getattr(sys, "frozen", False):
              sys.executable = "/usr/local/bin/python3.13"
          from homeassistant.__main__ import main
          if __name__ == "__main__":
              main()
          EOF

      - name: Build homeassistant executable (auto include all deps)
        run: |
          python3.13 - <<'PYCODE' > collect_args.txt
          import importlib.metadata
          EXCLUDE_KEYWORDS = {"example", "test"}
          collects = []
          for dist in importlib.metadata.distributions():
              name = dist.metadata.get('Name')
              if not name:
                  continue
              lname = name.lower()
              if any(k in lname for k in EXCLUDE_KEYWORDS):
                  continue
              top_level = None
              try:
                  top_level = dist.read_text('top_level.txt')
              except FileNotFoundError:
                  pass
              if top_level:
                  for module in top_level.splitlines():
                      if not module.strip():
                          continue
                      if any(k in module.lower() for k in EXCLUDE_KEYWORDS):
                          continue
                      collects.append(f"--collect-all {module.strip()}")
              else:
                  collects.append(f"--collect-all {name.replace('-', '_')}")
          print(' '.join(sorted(set(collects))))
          PYCODE

          ALL_COLLECTS=$(cat collect_args.txt)
          SITE_PACKAGES=$(python3.13 -c "import site; print(site.getsitepackages()[0])")
          
          # Collect .so files from site-packages (e.g., from homeassistant or other dependencies)
          EXTRA_DATA=$(find $SITE_PACKAGES -type f -name "*.so" -printf "--add-binary '%p:.' ")
      
          # Collect .so files from homeassistant directory as well (if relevant)
          EXTRA_HOMEASSISTANT_SO=$(find $(python3.13 -c "import homeassistant; print(homeassistant.__path__[0])") -type f -name "*.so" -printf "--add-binary '%p:.' ")

          python3.13 -m PyInstaller --onefile \
            --name homeassistant \
            --collect-all homeassistant \
            --noupx \
            --exclude-module pytest \
            --exclude-module unittest \
            --exclude-module test \
            --exclude-module tests \
            --exclude-module mypy \
            --exclude-module black \
            --exclude-module pylint \
            --exclude-module setuptools \
            --exclude-module wheel \
            --exclude-module pip \
            --exclude-module pycryptodome \
            $ALL_COLLECTS \
            $EXTRA_DATA \
            $EXTRA_HOMEASSISTANT_SO \
            run_homeassistant.py
          ls -lh dist/

      - name: Test binary
        run: |
          ./dist/homeassistant --version

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: homeassistant
          path: dist/homeassistant

      - name: Upload binary to Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: "v2025.10.1-${{ github.run_number }}"
          files: dist/homeassistant
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
